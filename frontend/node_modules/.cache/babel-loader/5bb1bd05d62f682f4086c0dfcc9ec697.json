{"ast":null,"code":"var _jsxFileName = \"/home/marc/EatTheBlocks/nft-royalties/frontend/src/pages/transfertokens.js\",\n    _s = $RefreshSig$();\n\n// Import the ethers library\nimport { React, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\nimport MyToken from \"../contracts/MyToken.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transfertokens = ({\n  signerAddress,\n  mytoken,\n  currentAccount,\n  addMessage\n}) => {\n  _s();\n\n  const [balancefrom, setBalanceFrom] = useState(0);\n  const [balanceto, setBalanceTo] = useState(0);\n  const [balanceartist, setBalanceArtist] = useState(0);\n\n  const onTransferTokensWithoutRoyalties = async e => {\n    e.preventDefault();\n    const from = e.target.elements.from.value;\n    const to = e.target.elements.to.value;\n    const amount = e.target.elements.amount.value;\n    console.log(from);\n    console.log(to);\n    await mytoken.transfer(to, ethers.utils.parseUnits(amount));\n  };\n\n  const onTransferTokensWithRoyalties = async e => {\n    try {\n      e.preventDefault();\n      const from = e.target.elements.from.value;\n      const to = e.target.elements.to.value;\n      const amount = e.target.elements.amount.value;\n      console.log(from);\n      console.log(to);\n      await mytoken.transferWithRoyalies(to, ethers.utils.parseUnits(amount));\n    } catch (oE) {\n      const message = [{\n        head: \"Error!\",\n        body: oE,\n        variant: \"error\"\n      }];\n      addMessage(message);\n    }\n  };\n\n  const getBalances = async (from, to) => {\n    setBalanceFrom(await mytoken.balanceOf(from));\n    setBalanceTo(await mytoken.balanceOf(to));\n    const artist = await mytoken._artist();\n\n    if (artist !== \"0x0000000000000000000000000000000000000000\") {\n      setBalanceArtist(await mytoken.balanceOf(artist));\n    }\n\n    const message = [{\n      head: \"transfer complete.\",\n      body: \"The transfer of the tokens is complete!\",\n      variant: \"info\"\n    }];\n    addMessage(message);\n  };\n\n  mytoken.on(\"Transfer\", (from, to, amount) => {\n    getBalances(from, to);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transfer tokens without royalties\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card col-sm-8 bg-secondary\",\n      children: [\"The token address: \", MyToken.address, \" is the token that we can transfer with or without royalties to the artist. The artist can be setup by the admin, and the percentage of royalties that the artist receives with every transaction.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [`Balance sender: ${ethers.utils.formatEther(balancefrom)}`, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [`Balance receiver: ${ethers.utils.formatEther(balanceto)}`, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `Balance artist: ${ethers.utils.formatEther(balanceartist)}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6  card col-sm-8 bg-secondary\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Transfer tokens without royalties.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => onTransferTokensWithoutRoyalties(e),\n            children: [\"From address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"readonly\",\n              name: \"from\",\n              className: \"form-control\",\n              placeholder: \"\",\n              value: currentAccount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), \"To address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"to\",\n              className: \"form-control\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), \"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"amount\",\n              className: \"form-control\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6  card col-sm-8 bg-secondary\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Transfer tokens with royalties.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => onTransferTokensWithRoyalties(e),\n            children: [\"From address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"readonly\",\n              name: \"from\",\n              className: \"form-control\",\n              placeholder: \"\",\n              value: currentAccount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), \"To address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"to\",\n              className: \"form-control\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), \"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"amount\",\n              className: \"form-control\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transfertokens, \"ventJoq9ROo/otsNnWg6meNcelg=\");\n\n_c = Transfertokens;\nexport default Transfertokens;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transfertokens\");","map":{"version":3,"sources":["/home/marc/EatTheBlocks/nft-royalties/frontend/src/pages/transfertokens.js"],"names":["React","useState","ethers","MyToken","Transfertokens","signerAddress","mytoken","currentAccount","addMessage","balancefrom","setBalanceFrom","balanceto","setBalanceTo","balanceartist","setBalanceArtist","onTransferTokensWithoutRoyalties","e","preventDefault","from","target","elements","value","to","amount","console","log","transfer","utils","parseUnits","onTransferTokensWithRoyalties","transferWithRoyalies","oE","message","head","body","variant","getBalances","balanceOf","artist","_artist","on","address","formatEther"],"mappings":"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","sourcesContent":["// Import the ethers library\nimport { React, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\nimport MyToken from \"../contracts/MyToken.json\";\n\nconst Transfertokens = ({\n  signerAddress,\n  mytoken,\n  currentAccount,\n  addMessage,\n}) => {\n  const [balancefrom, setBalanceFrom] = useState(0);\n  const [balanceto, setBalanceTo] = useState(0);\n  const [balanceartist, setBalanceArtist] = useState(0);\n\n  const onTransferTokensWithoutRoyalties = async (e) => {\n    e.preventDefault();\n    const from = e.target.elements.from.value;\n    const to = e.target.elements.to.value;\n    const amount = e.target.elements.amount.value;\n    console.log(from);\n    console.log(to);\n    await mytoken.transfer(to, ethers.utils.parseUnits(amount));\n  };\n\n  const onTransferTokensWithRoyalties = async (e) => {\n    try {\n      e.preventDefault();\n      const from = e.target.elements.from.value;\n      const to = e.target.elements.to.value;\n      const amount = e.target.elements.amount.value;\n      console.log(from);\n      console.log(to);\n      await mytoken.transferWithRoyalies(to, ethers.utils.parseUnits(amount));\n    } catch (oE) {\n      const message = [\n        {\n          head: \"Error!\",\n          body: oE,\n          variant: \"error\",\n        },\n      ];\n      addMessage(message);\n    }\n  };\n\n  const getBalances = async (from, to) => {\n    setBalanceFrom(await mytoken.balanceOf(from));\n    setBalanceTo(await mytoken.balanceOf(to));\n\n    const artist = await mytoken._artist();\n    if (artist !== \"0x0000000000000000000000000000000000000000\") {\n      setBalanceArtist(await mytoken.balanceOf(artist));\n    }\n\n    const message = [\n      {\n        head: \"transfer complete.\",\n        body: \"The transfer of the tokens is complete!\",\n        variant: \"info\",\n      },\n    ];\n    addMessage(message);\n  };\n\n  mytoken.on(\"Transfer\", (from, to, amount) => {\n    getBalances(from, to);\n  });\n\n  return (\n    <div>\n      <h1>Transfer tokens without royalties</h1>\n      <br />\n\n      <div className=\"card col-sm-8 bg-secondary\">\n        The token address: {MyToken.address} is the token that we can transfer\n        with or without royalties to the artist. The artist can be setup by the\n        admin, and the percentage of royalties that the artist receives with\n        every transaction.\n      </div>\n      <br />\n      <div>{`Balance sender: ${ethers.utils.formatEther(balancefrom)}`} </div>\n      <div>{`Balance receiver: ${ethers.utils.formatEther(balanceto)}`} </div>\n      <div>{`Balance artist: ${ethers.utils.formatEther(balanceartist)}`}</div>\n      <br />\n\n      <div className=\"row\">\n        <div className=\"col-lg-6  card col-sm-8 bg-secondary\">\n          <div className=\"card-body\">\n            <div className=\"card-header\">\n              Transfer tokens without royalties.\n            </div>\n            <form onSubmit={(e) => onTransferTokensWithoutRoyalties(e)}>\n              From address:\n              <input\n                type=\"readonly\"\n                name=\"from\"\n                className=\"form-control\"\n                placeholder=\"\"\n                value={currentAccount}\n              />\n              To address:\n              <input\n                type=\"text\"\n                name=\"to\"\n                className=\"form-control\"\n                placeholder=\"\"\n              />\n              Amount:\n              <input\n                type=\"text\"\n                name=\"amount\"\n                className=\"form-control\"\n                placeholder=\"\"\n              />\n              <br />\n              <button className=\"btn btn-primary\">submit</button>\n            </form>\n          </div>\n        </div>\n\n        <div className=\"col-lg-6  card col-sm-8 bg-secondary\">\n          <div className=\"card-body\">\n            <div className=\"card-header\">Transfer tokens with royalties.</div>\n            <form onSubmit={(e) => onTransferTokensWithRoyalties(e)}>\n              From address:\n              <input\n                type=\"readonly\"\n                name=\"from\"\n                className=\"form-control\"\n                placeholder=\"\"\n                value={currentAccount}\n              />\n              To address:\n              <input\n                type=\"text\"\n                name=\"to\"\n                className=\"form-control\"\n                placeholder=\"\"\n              />\n              Amount:\n              <input\n                type=\"text\"\n                name=\"amount\"\n                className=\"form-control\"\n                placeholder=\"\"\n              />\n              <br />\n              <button className=\"btn btn-primary\">submit</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Transfertokens;\n"]},"metadata":{},"sourceType":"module"}