{"ast":null,"code":"var _jsxFileName = \"/home/marc/EatTheBlocks/nft-royalties/frontend/src/pages/nftpage.js\";\n// Import the ethers library\nimport React from \"react\";\nimport { ethers } from \"ethers\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst nftpage = ({\n  signerAddress,\n  mytoken,\n  currentAccount\n}) => {\n  let balfrom, balto;\n\n  const getBalance = async e => {\n    e.preventDefault();\n    const from = e.target.elements.from.value;\n    const to = e.target.elements.to.value; //const amount = e.target.elements.amount.value;\n    // console.log(mytoken);\n    // console.log(from);\n    // console.log(to);\n    // console.log(amount);\n\n    balto = await mytoken.balanceOf(to);\n    balfrom = await mytoken.balanceOf(from);\n    console.log(ethers.utils.formatEther(balto));\n    console.log(ethers.utils.formatEther(balfrom));\n  };\n\n  const onClickFunction = async e => {\n    e.preventDefault();\n    getBalance(e); //const from = e.target.elements.from.value;\n\n    const to = e.target.elements.to.value;\n    const amount = e.target.elements.amount.value; // console.log(mytoken);\n    // console.log(from);\n    // console.log(to);\n    // console.log(amount);\n\n    await mytoken.transfer(to, ethers.utils.parseUnits(amount));\n  };\n\n  const MintTokens = async e => {\n    e.preventDefault(); //const to = e.target.elements.to.value;\n\n    const amount = e.target.elements.amount.value; // console.log(mytoken);\n    // console.log(from);\n    // console.log(to);\n    // console.log(amount);\n\n    await mytoken.mint(ethers.utils.parseUnits(amount));\n  };\n\n  const onNFTClickFunction = async e => {\n    e.preventDefault();\n    const from = e.target.elements.from.value;\n    const to = e.target.elements.to.value;\n    console.log(from);\n    console.log(to);\n    await mytoken.transferFrom(from, to, 0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card col-sm-6 bg-secondary\",\n      children: \"Token address: 0x5FbDB2315678afecb367f032d93F642f64180aa3 install Metamask, and create an account. send some tokens to your account. (this is all free on the test network!)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4 card col-sm-4 bg-secondary\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Mint tokens. (Faucet tokens)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => MintTokens(e),\n            children: [\"To address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"to\",\n              className: \"form-control\",\n              placeholder: \"\",\n              value: currentAccount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), \"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"amount\",\n              className: \"form-control\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4  card col-sm-4 bg-secondary\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Send tokens.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => onClickFunction(e),\n            children: [\"From address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"readonly\",\n              name: \"from\",\n              className: \"form-control\",\n              placeholder: \"\",\n              value: currentAccount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), \"To address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"to\",\n              className: \"form-control\",\n              placeholder: \"\",\n              value: \"0x9965507d1a55bcc2695c58ba16fb37d819b0a4dc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), \"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"amount\",\n              className: \"form-control\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4  card col-sm-4 bg-secondary\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Send NFT tokens.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => onNFTClickFunction(e),\n            children: [\"From address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"readonly\",\n              name: \"from\",\n              className: \"form-control\",\n              placeholder: \"\",\n              value: \"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), \"To address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"to\",\n              className: \"form-control\",\n              placeholder: \"\",\n              value: \"0x15d34aaf54267db7d7c367839aaf71a00a2c6a65\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\nexport default nftpage;","map":{"version":3,"sources":["/home/marc/EatTheBlocks/nft-royalties/frontend/src/pages/nftpage.js"],"names":["React","ethers","nftpage","signerAddress","mytoken","currentAccount","balfrom","balto","getBalance","e","preventDefault","from","target","elements","value","to","balanceOf","console","log","utils","formatEther","onClickFunction","amount","transfer","parseUnits","MintTokens","mint","onNFTClickFunction","transferFrom"],"mappings":"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","sourcesContent":["// Import the ethers library\nimport React from \"react\";\nimport { ethers } from \"ethers\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/css/bootstrap-grid.css\";\n\nconst nftpage = ({ signerAddress, mytoken, currentAccount }) => {\n  let balfrom, balto;\n\n  const getBalance = async (e) => {\n    e.preventDefault();\n    const from = e.target.elements.from.value;\n    const to = e.target.elements.to.value;\n    //const amount = e.target.elements.amount.value;\n    // console.log(mytoken);\n    // console.log(from);\n    // console.log(to);\n    // console.log(amount);\n    balto = await mytoken.balanceOf(to);\n    balfrom = await mytoken.balanceOf(from);\n\n    console.log(ethers.utils.formatEther(balto));\n    console.log(ethers.utils.formatEther(balfrom));\n  };\n\n  const onClickFunction = async (e) => {\n    e.preventDefault();\n    getBalance(e);\n    //const from = e.target.elements.from.value;\n    const to = e.target.elements.to.value;\n    const amount = e.target.elements.amount.value;\n    // console.log(mytoken);\n    // console.log(from);\n    // console.log(to);\n    // console.log(amount);\n    await mytoken.transfer(to, ethers.utils.parseUnits(amount));\n  };\n\n  const MintTokens = async (e) => {\n    e.preventDefault();\n    //const to = e.target.elements.to.value;\n    const amount = e.target.elements.amount.value;\n    // console.log(mytoken);\n    // console.log(from);\n    // console.log(to);\n    // console.log(amount);\n    await mytoken.mint(ethers.utils.parseUnits(amount));\n  };\n\n  const onNFTClickFunction = async (e) => {\n    e.preventDefault();\n    const from = e.target.elements.from.value;\n    const to = e.target.elements.to.value;\n\n    console.log(from);\n    console.log(to);\n\n    await mytoken.transferFrom(from, to, 0);\n  };\n\n  return (\n    <div>\n      <h1>NFT</h1>\n      <br />\n\n      <div className=\"card col-sm-6 bg-secondary\">\n        Token address: 0x5FbDB2315678afecb367f032d93F642f64180aa3 install\n        Metamask, and create an account. send some tokens to your account. (this\n        is all free on the test network!)\n      </div>\n\n      <div className=\"row mb-3\">\n        <div className=\"col-4 card col-sm-4 bg-secondary\">\n          <div className=\"card-body\">\n            <div className=\"card-header\">Mint tokens. (Faucet tokens)</div>\n            <form onSubmit={(e) => MintTokens(e)}>\n              To address:\n              <input\n                type=\"text\"\n                name=\"to\"\n                className=\"form-control\"\n                placeholder=\"\"\n                value={currentAccount}\n              />\n              Amount:\n              <input\n                type=\"text\"\n                name=\"amount\"\n                className=\"form-control\"\n                placeholder=\"\"\n              />\n              <br />\n              <button className=\"btn btn-primary\">submit</button>\n            </form>\n          </div>\n        </div>\n\n        <div className=\"col-4  card col-sm-4 bg-secondary\">\n          <div className=\"card-body\">\n            <div className=\"card-header\">Send tokens.</div>\n            <form onSubmit={(e) => onClickFunction(e)}>\n              From address:\n              <input\n                type=\"readonly\"\n                name=\"from\"\n                className=\"form-control\"\n                placeholder=\"\"\n                value={currentAccount}\n              />\n              To address:\n              <input\n                type=\"text\"\n                name=\"to\"\n                className=\"form-control\"\n                placeholder=\"\"\n                value=\"0x9965507d1a55bcc2695c58ba16fb37d819b0a4dc\"\n              />\n              Amount:\n              <input\n                type=\"text\"\n                name=\"amount\"\n                className=\"form-control\"\n                placeholder=\"\"\n              />\n              <br />\n              <button className=\"btn btn-primary\">submit</button>\n            </form>\n          </div>\n        </div>\n\n        <div className=\"col-4  card col-sm-4 bg-secondary\">\n          <div className=\"card-body\">\n            <div className=\"card-header\">Send NFT tokens.</div>\n            <form onSubmit={(e) => onNFTClickFunction(e)}>\n              From address:\n              <input\n                type=\"readonly\"\n                name=\"from\"\n                className=\"form-control\"\n                placeholder=\"\"\n                value=\"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\"\n              />\n              To address:\n              <input\n                type=\"text\"\n                name=\"to\"\n                className=\"form-control\"\n                placeholder=\"\"\n                value=\"0x15d34aaf54267db7d7c367839aaf71a00a2c6a65\"\n              />\n              <br />\n              <button className=\"btn btn-primary\">submit</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default nftpage;\n"]},"metadata":{},"sourceType":"module"}