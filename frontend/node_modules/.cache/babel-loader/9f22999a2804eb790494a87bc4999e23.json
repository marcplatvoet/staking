{"ast":null,"code":"var _jsxFileName = \"/home/marc/eattheblocks-master/screencast/379-nft-royalties/connectButton/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { useEffect, useState } from 'react';\nimport { Navbar, Container, Row, Col, Button, Alert } from 'react-bootstrap';\nimport Chain from './components/chain';\nimport SignIn from './components/signin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [currentAccount, setCurrentAccount] = useState('');\n  const [isLogged, setIsLogged] = useState(false);\n  const [currentChainID, setCurrentChainID] = useState(-1);\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const {\n          message,\n          provider,\n          address\n        } = await SignIn();\n      } catch (e) {\n        console.log(e);\n        setMessage({\n          payload: `Ooops... There was a problem when loading the app: ${e}`,\n          type: 'danger'\n        });\n      }\n    };\n\n    init();\n  }, []); // const SignIn = async () => {\n  //     //Detect Provider\n  //     const provider = await detectEthereumProvider()\n  //     //const web3 = new Web3(provider)\n  //     if(!provider) {\n  //       setMessage(messages => [...messages, {head : \"Wallet not found\", body: `Please install MetaMask!`, variant: 'warning'}])\n  //     } else {\n  //       const address = await ConnectWallet()\n  //       if (address)\n  //         setMessage(messages =>[...messages, {head : \"User Login\", body: `addres: ${address}`, variant: 'success'}])\n  //     }\n  // }\n\n  const ConnectWallet = async () => {\n    console.log(\"Try Connect\");\n\n    try {\n      await window.ethereum.enable();\n      const id = await window.ethereum.request({\n        method: 'eth_chainId'\n      });\n      setCurrentChainID(() => parseInt(id, 16));\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setIsLogged(true);\n      setCurrentAccount(accounts[0]);\n      return accounts[0];\n    } catch (err) {\n      if (err.code === 4001) {\n        // EIP-1193 userRejectedRequest error\n        // If this happens, the user rejected the connection request.\n        console.log('Please connect to MetaMask.');\n        setMessage(messages => [...messages, {\n          head: \"User Rejected Request\",\n          body: 'Please connect to MetaMask.',\n          variant: 'info'\n        }]);\n      } else if (err.code === -32002) {\n        console.log('Please unlock MetaMask.');\n        setMessage(messages => [...messages, {\n          head: \"User Request Pending\",\n          body: 'Please unlock MetaMask and try agin.',\n          variant: 'info'\n        }]);\n      } else {\n        console.error(err);\n        setMessage(messages => [...messages, {\n          head: \"Error\",\n          body: err.message,\n          variant: 'info'\n        }]);\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.onbeforeunload = function () {\n      return \"Prevent reload\";\n    };\n\n    window.ethereum.on('accountsChanged', function (accounts, currentAccount, messages) {\n      if (accounts.length === 0) {\n        // MetaMask is locked or the user has not connected any accounts\n        setMessage(messages => [...messages, {\n          head: \"User Rejected Request\",\n          body: 'Please connect to MetaMask.',\n          variant: 'info'\n        }]);\n      } else if (accounts[0] !== currentAccount) {\n        console.log(accounts[0]);\n        console.log(messages);\n        setCurrentAccount(() => accounts[0]);\n        setMessage(messages => [...messages, {\n          head: \"Account Changed\",\n          body: `addres: ${accounts[0]}`,\n          variant: 'warning'\n        }]);\n      }\n    });\n    window.ethereum.on('chainChanged', _chainId => {\n      console.log(_chainId);\n      setCurrentChainID(() => parseInt(_chainId, 16)); //window.location.reload()\n    });\n  }, []);\n\n  const SignOut = async () => {\n    setIsLogged(false);\n    setCurrentAccount('');\n  };\n\n  const shortAddr = () => {\n    return `${currentAccount.substr(0, 4)}...${currentAccount.substring(currentAccount.length - 4, currentAccount.length)}`;\n  };\n\n  const [messages, setMessage] = useState([]);\n\n  const Message = props => {\n    _s();\n\n    const [show, setShow] = useState(true);\n\n    const close = () => {\n      setShow(false);\n      setMessage(messages.filter((item, index) => index !== props.id));\n    };\n\n    if (show) {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        variant: props.variant ? props.variant : 'dark',\n        onClose: close,\n        dismissible: true,\n        children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: props.head\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n\n  _s(Message, \"vfh/DqFDMxhJHyczn42K3OB7AlU=\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"dark\",\n      className: \"justify-content-between\",\n      variant: \"dark\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        href: \"#home\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: logo,\n          width: \"30\",\n          height: \"30\",\n          className: \"d-inline-block align-top App-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }, this), ' ', \"0x React Bootstrap Tutorial\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Chain, {\n          chainId: currentChainID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          className: \"connect-button\",\n          disabled: isLogged,\n          onClick: SignIn,\n          variant: \"primary\",\n          children: isLogged ? shortAddr() : \"Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 7\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          onClick: SignOut,\n          style: {\n            visibility: isLogged ? \"visible\" : \"hidden\"\n          },\n          variant: \"danger\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      children: messages.map((item, i) => /*#__PURE__*/_jsxDEV(Message, {\n        head: item.head,\n        body: item.body,\n        variant: item.variant,\n        id: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            className: \"App-logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(App, \"+XsOW9ozndnZAjJX+8dEeQNULvQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/marc/eattheblocks-master/screencast/379-nft-royalties/connectButton/src/App.js"],"names":["detectEthereumProvider","useEffect","useState","Navbar","Container","Row","Col","Button","Alert","Chain","SignIn","App","currentAccount","setCurrentAccount","isLogged","setIsLogged","currentChainID","setCurrentChainID","init","message","provider","address","e","console","log","setMessage","payload","type","ConnectWallet","window","ethereum","enable","id","request","method","parseInt","accounts","err","code","messages","head","body","variant","error","onbeforeunload","on","length","_chainId","SignOut","shortAddr","substr","substring","Message","props","show","setShow","close","filter","item","index","logo","visibility","map","i"],"mappings":"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","sourcesContent":["import logo from './logo.svg'\nimport './App.css'\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { useEffect, useState } from 'react'\nimport { Navbar,Container,Row,Col,Button,Alert  } from 'react-bootstrap'\nimport Chain from './components/chain'\nimport SignIn from './components/signin'\n\n\nfunction App() {\n\n  const [currentAccount, setCurrentAccount] = useState('');\n  const [isLogged, setIsLogged] = useState(false);\n  const [currentChainID, setCurrentChainID] = useState(-1);\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const { message,provider,address } = await SignIn();\n      } catch(e) {\n        console.log(e);\n       \n        setMessage({\n          payload: `Ooops... There was a problem when loading the app: ${e}`,\n          type: 'danger'\n        });\n      }\n    };\n    init();\n  }, []);\n\n  // const SignIn = async () => {\n  //     //Detect Provider\n  //     const provider = await detectEthereumProvider()\n  //     //const web3 = new Web3(provider)\n\n  //     if(!provider) {\n\n  //       setMessage(messages => [...messages, {head : \"Wallet not found\", body: `Please install MetaMask!`, variant: 'warning'}])\n\n  //     } else {\n\n  //       const address = await ConnectWallet()\n  //       if (address)\n  //         setMessage(messages =>[...messages, {head : \"User Login\", body: `addres: ${address}`, variant: 'success'}])\n\n  //     }\n      \n  // }\n\n  const ConnectWallet = async () => {\n\n    console.log(\"Try Connect\");\n\n    try {\n      await window.ethereum.enable();\n\n      const id = await window.ethereum.request({ method: 'eth_chainId' })\n      setCurrentChainID(() => parseInt(id, 16))\n\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' })\n      setIsLogged(true)\n      setCurrentAccount(accounts[0])\n      return accounts[0]\n\n    } catch(err) {\n        if (err.code === 4001) {\n          // EIP-1193 userRejectedRequest error\n          // If this happens, the user rejected the connection request.\n          console.log('Please connect to MetaMask.')\n          setMessage(messages =>[...messages, {head : \"User Rejected Request\", body: 'Please connect to MetaMask.', variant: 'info'}])\n\n        } else if(err.code === -32002) {\n          console.log('Please unlock MetaMask.')\n          setMessage(messages =>[...messages, {head : \"User Request Pending\", body: 'Please unlock MetaMask and try agin.', variant: 'info'}])\n        } else {\n          console.error(err);\n          setMessage(messages =>[...messages, {head : \"Error\", body: err.message, variant: 'info'}])\n        }\n\n    }\n    \n  }\n\n  useEffect(() => {\n    window.onbeforeunload = function() { return \"Prevent reload\" }\n    window.ethereum.on('accountsChanged', function (accounts,currentAccount,messages) {\n      if (accounts.length === 0) {\n        // MetaMask is locked or the user has not connected any accounts\n        setMessage(messages => [...messages, {head : \"User Rejected Request\", body: 'Please connect to MetaMask.', variant: 'info'}])\n      } else if (accounts[0] !== currentAccount) {\n        console.log(accounts[0])\n        console.log(messages);\n        setCurrentAccount(() => accounts[0])\n        setMessage(messages => [...messages, {head : \"Account Changed\", body: `addres: ${accounts[0]}`, variant: 'warning'}])\n      }\n    });\n\n    window.ethereum.on('chainChanged', (_chainId) => {\n      console.log(_chainId);\n      setCurrentChainID(() => parseInt(_chainId, 16))\n      //window.location.reload()\n    });\n  }, []);\n\n\n\n  const SignOut = async () => {\n    setIsLogged(false)\n    setCurrentAccount('')\n  }\n\n  const shortAddr = () => {\n    return `${currentAccount.substr(0,4)}...${currentAccount.substring(currentAccount.length - 4, currentAccount.length)}`\n  }\n\n\n  \n  const [messages, setMessage] = useState([]);\n  \n  const Message = (props) => {\n\n    const [show, setShow] = useState(true);\n\n    const close = () => {\n      setShow(false)\n      setMessage(messages.filter((item, index) => index !== props.id))\n    }\n\n    if(show) {\n      return (\n        <Alert variant={props.variant ? props.variant : 'dark'} onClose={close} dismissible>\n          <Alert.Heading>{props.head}</Alert.Heading>\n          <p>\n            {props.body}\n          </p>\n        </Alert>\n      )\n    } else {\n      return(<></>)\n    }\n\n    \n  }\n\n  \n\n  \n  return (\n  <>\n  <Navbar bg=\"dark\" className=\"justify-content-between\" variant=\"dark\">\n    <Navbar.Brand href=\"#home\">\n      <img\n        alt=\"\"\n        src={logo}\n        width=\"30\"\n        height=\"30\"\n        className=\"d-inline-block align-top App-logo\"\n      />{' '}\n      0x React Bootstrap Tutorial\n      \n    </Navbar.Brand>\n    <div>\n      <Chain chainId={currentChainID} />{' '}\n      <Button className=\"connect-button\" disabled={isLogged} onClick={SignIn} variant=\"primary\">{isLogged ? shortAddr() : \"Connect\"}</Button>{' '}\n      <Button onClick={SignOut} style={{visibility: isLogged ? \"visible\" : \"hidden\"}} variant=\"danger\">X</Button>\n    </div>\n  </Navbar>\n\n    <div className=\"message-list\" >\n        {\n          messages.map((item,i) => (\n            <Message head={item.head} body={item.body} variant={item.variant} id={i} key={i} />\n          ))\n        }\n    </div>\n\n    <Container>\n      <Row>\n        <Col>\n        \n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        \n        </Col>\n      </Row>\n    </Container>\n  </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}