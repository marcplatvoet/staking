{"ast":null,"code":"var _jsxFileName = \"/home/marc/EatTheBlocks/nft-royalties/frontend/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { React, useEffect, useState } from \"react\";\nimport { Navbar, Container, Row, Col, Button, Alert } from \"react-bootstrap\";\nimport Chain from \"./components/chain\";\nimport About from \"./pages/about\";\nimport ContactUs from \"./pages/contactus\";\nimport NFTPage from \"./pages/nftpage\";\nimport { getTokenBlockchain } from \"./components/token\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [currentAccount, setCurrentAccount] = useState(\"\"); //const [currentAccountBalance, setCurrentAccountBalance] = useState(0);\n  // const [currentArtist, setCurrentArtist] = useState(\"\");\n  // const [currentArtistBalance, setCurrentArtistBalance] = useState(0);\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [currentChainID, setCurrentChainID] = useState(-1);\n  const [page, setPage] = useState(\"\");\n  const [mytoken, setMyToken] = useState(undefined);\n  const [signerAddress, setSignerAddress] = useState(undefined); // const [amountAdmin, setAmountAdmin] = useState(0);\n  // const [amountArtist, setAmountArtist] = useState(0);\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const {\n          signerAddress,\n          mytoken\n        } = await getTokenBlockchain();\n        setMyToken(mytoken);\n        setSignerAddress(signerAddress); // setAmountAdmin(await getAmount(token, addresses.admin));\n        // setAmountArtist(await getAmount(token, addresses.artist));\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    init();\n  }, []);\n\n  const SignIn = async () => {\n    //Detect Provider\n    const provider = await detectEthereumProvider(); //const web3 = new Web3(provider)\n\n    if (!provider) {\n      setMessage(messages => [...messages, {\n        head: \"Wallet not found\",\n        body: `Please install MetaMask!`,\n        variant: \"warning\"\n      }]);\n    } else {\n      const address = await ConnectWallet();\n      if (address) setMessage(messages => [...messages, {\n        head: \"User Login\",\n        body: `addres: ${address}`,\n        variant: \"success\"\n      }]);\n    }\n  };\n\n  const ConnectWallet = async () => {\n    console.log(\"Try Connect\");\n\n    try {\n      await window.ethereum.enable();\n      const id = await window.ethereum.request({\n        method: \"eth_chainId\"\n      });\n      setCurrentChainID(() => parseInt(id, 16));\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      setIsLogged(true);\n      setCurrentAccount(accounts[0]); //setCurrentAccountBallance(getBalance(accounts[0]));\n\n      console.log(accounts);\n      return accounts[0];\n    } catch (err) {\n      if (err.code === 4001) {\n        // EIP-1193 userRejectedRequest error\n        // If this happens, the user rejected the connection request.\n        console.log(\"Please connect to MetaMask.\");\n        setMessage(messages => [...messages, {\n          head: \"User Rejected Request\",\n          body: \"Please connect to MetaMask.\",\n          variant: \"info\"\n        }]);\n      } else if (err.code === -32002) {\n        console.log(\"Please unlock MetaMask.\");\n        setMessage(messages => [...messages, {\n          head: \"User Request Pending\",\n          body: \"Please unlock MetaMask and try agin.\",\n          variant: \"info\"\n        }]);\n      } else {\n        console.error(err);\n        setMessage(messages => [...messages, {\n          head: \"Error\",\n          body: err.message,\n          variant: \"info\"\n        }]);\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.onbeforeunload = function () {\n      return \"Prevent reload\";\n    };\n\n    window.ethereum.on(\"accountsChanged\", function (accounts, currentAccount, messages) {\n      if (accounts.length === 0) {\n        // MetaMask is locked or the user has not connected any accounts\n        setMessage(messages => [...messages, {\n          head: \"User Rejected Request\",\n          body: \"Please connect to MetaMask.\",\n          variant: \"info\"\n        }]);\n      } else if (accounts[0] !== currentAccount) {\n        console.log(accounts[0]);\n        console.log(messages);\n        setCurrentAccount(() => accounts[0]);\n        setMessage(messages => [...messages, {\n          head: \"Account Changed\",\n          body: `addres: ${accounts[0]}`,\n          variant: \"warning\"\n        }]);\n      }\n    });\n    window.ethereum.on(\"chainChanged\", _chainId => {\n      console.log(_chainId);\n      setCurrentChainID(() => parseInt(_chainId, 16)); //window.location.reload()\n    });\n  }, []);\n\n  const SignOut = async () => {\n    setIsLogged(false);\n    setCurrentAccount(\"\");\n  };\n\n  const shortAddr = () => {\n    return `${currentAccount.substr(0, 4)}...${currentAccount.substring(currentAccount.length - 4, currentAccount.length)}`;\n  };\n\n  const [messages, setMessage] = useState([]);\n\n  const Message = props => {\n    _s();\n\n    const [show, setShow] = useState(true);\n\n    const close = () => {\n      setShow(false);\n      setMessage(messages.filter((item, index) => index !== props.id));\n    };\n\n    if (show) {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        variant: props.variant ? props.variant : \"dark\",\n        onClose: close,\n        dismissible: true,\n        children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: props.head\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n\n  _s(Message, \"vfh/DqFDMxhJHyczn42K3OB7AlU=\");\n\n  function onLinkClick(navpage) {\n    console.log(navpage);\n    setPage(navpage);\n  }\n\n  if (typeof mytoken === \"undefined\") {\n    return \"Loading...\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"dark\",\n      className: \"justify-content-between\",\n      variant: \"dark\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        href: \"#home\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: logo,\n          width: \"30\",\n          height: \"30\",\n          className: \"d-inline-block align-top App-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          bg: \"dark\",\n          className: \"btn btn-dark\",\n          onClick: () => onLinkClick(\"about\"),\n          variant: \"dark\",\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          bg: \"dark\",\n          className: \"btn btn-dark\",\n          onClick: () => onLinkClick(\"nft\"),\n          variant: \"dark\",\n          children: \"NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          bg: \"dark\",\n          className: \"btn btn-dark\",\n          onClick: () => onLinkClick(\"nfttest\"),\n          variant: \"dark\",\n          children: \"Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          bg: \"dark\",\n          className: \"btn btn-dark\",\n          onClick: () => onLinkClick(\"artist\"),\n          variant: \"dark\",\n          children: \"Contact us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Chain, {\n          chainId: currentChainID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          className: isLogged ? \"connect-button btn-primary\" : \"btn-success\",\n          onClick: isLogged ? SignOut : SignIn,\n          variant: \"primary\",\n          children: isLogged ? shortAddr() : \"Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      children: messages.map((item, i) => /*#__PURE__*/_jsxDEV(Message, {\n        head: item.head,\n        body: item.body,\n        variant: item.variant,\n        id: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [page === \"about\" ? /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 33\n          }, this) : null, page === \"contactus\" ? /*#__PURE__*/_jsxDEV(ContactUs, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 37\n          }, this) : null, page === \"nft\" ? /*#__PURE__*/_jsxDEV(NFTPage, {\n            signerAddress: signerAddress,\n            mytoken: mytoken,\n            currentAccount: currentAccount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this) : null, page === \"artist\" ? /*#__PURE__*/_jsxDEV(\"artist\", {\n            signerAddress: signerAddress,\n            mytoken: mytoken,\n            currentAccount: currentAccount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(App, \"qseAOTyV4o6TuuxMaKLyk4h7RNo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/marc/EatTheBlocks/nft-royalties/frontend/src/App.js"],"names":["detectEthereumProvider","React","useEffect","useState","Navbar","Container","Row","Col","Button","Alert","Chain","About","ContactUs","NFTPage","getTokenBlockchain","App","currentAccount","setCurrentAccount","isLogged","setIsLogged","currentChainID","setCurrentChainID","page","setPage","mytoken","setMyToken","undefined","signerAddress","setSignerAddress","init","e","console","log","SignIn","provider","setMessage","messages","head","body","variant","address","ConnectWallet","window","ethereum","enable","id","request","method","parseInt","accounts","err","code","error","message","onbeforeunload","on","length","_chainId","SignOut","shortAddr","substr","substring","Message","props","show","setShow","close","filter","item","index","onLinkClick","navpage","logo","map","i"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { React, useEffect, useState } from \"react\";\nimport { Navbar, Container, Row, Col, Button, Alert } from \"react-bootstrap\";\nimport Chain from \"./components/chain\";\nimport About from \"./pages/about\";\nimport ContactUs from \"./pages/contactus\";\nimport NFTPage from \"./pages/nftpage\";\nimport { getTokenBlockchain } from \"./components/token\";\n\nfunction App() {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  //const [currentAccountBalance, setCurrentAccountBalance] = useState(0);\n  // const [currentArtist, setCurrentArtist] = useState(\"\");\n  // const [currentArtistBalance, setCurrentArtistBalance] = useState(0);\n  const [isLogged, setIsLogged] = useState(false);\n  const [currentChainID, setCurrentChainID] = useState(-1);\n  const [page, setPage] = useState(\"\");\n  const [mytoken, setMyToken] = useState(undefined);\n  const [signerAddress, setSignerAddress] = useState(undefined);\n  // const [amountAdmin, setAmountAdmin] = useState(0);\n  // const [amountArtist, setAmountArtist] = useState(0);\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const { signerAddress, mytoken } = await getTokenBlockchain();\n        setMyToken(mytoken);\n        setSignerAddress(signerAddress);\n        // setAmountAdmin(await getAmount(token, addresses.admin));\n        // setAmountArtist(await getAmount(token, addresses.artist));\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    init();\n  }, []);\n\n  const SignIn = async () => {\n    //Detect Provider\n    const provider = await detectEthereumProvider();\n    //const web3 = new Web3(provider)\n\n    if (!provider) {\n      setMessage((messages) => [\n        ...messages,\n        {\n          head: \"Wallet not found\",\n          body: `Please install MetaMask!`,\n          variant: \"warning\",\n        },\n      ]);\n    } else {\n      const address = await ConnectWallet();\n      if (address)\n        setMessage((messages) => [\n          ...messages,\n          {\n            head: \"User Login\",\n            body: `addres: ${address}`,\n            variant: \"success\",\n          },\n        ]);\n    }\n  };\n\n  const ConnectWallet = async () => {\n    console.log(\"Try Connect\");\n\n    try {\n      await window.ethereum.enable();\n\n      const id = await window.ethereum.request({ method: \"eth_chainId\" });\n      setCurrentChainID(() => parseInt(id, 16));\n\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      setIsLogged(true);\n      setCurrentAccount(accounts[0]);\n      //setCurrentAccountBallance(getBalance(accounts[0]));\n\n      console.log(accounts);\n      return accounts[0];\n    } catch (err) {\n      if (err.code === 4001) {\n        // EIP-1193 userRejectedRequest error\n        // If this happens, the user rejected the connection request.\n        console.log(\"Please connect to MetaMask.\");\n        setMessage((messages) => [\n          ...messages,\n          {\n            head: \"User Rejected Request\",\n            body: \"Please connect to MetaMask.\",\n            variant: \"info\",\n          },\n        ]);\n      } else if (err.code === -32002) {\n        console.log(\"Please unlock MetaMask.\");\n        setMessage((messages) => [\n          ...messages,\n          {\n            head: \"User Request Pending\",\n            body: \"Please unlock MetaMask and try agin.\",\n            variant: \"info\",\n          },\n        ]);\n      } else {\n        console.error(err);\n        setMessage((messages) => [\n          ...messages,\n          { head: \"Error\", body: err.message, variant: \"info\" },\n        ]);\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.onbeforeunload = function () {\n      return \"Prevent reload\";\n    };\n    window.ethereum.on(\n      \"accountsChanged\",\n      function (accounts, currentAccount, messages) {\n        if (accounts.length === 0) {\n          // MetaMask is locked or the user has not connected any accounts\n          setMessage((messages) => [\n            ...messages,\n            {\n              head: \"User Rejected Request\",\n              body: \"Please connect to MetaMask.\",\n              variant: \"info\",\n            },\n          ]);\n        } else if (accounts[0] !== currentAccount) {\n          console.log(accounts[0]);\n          console.log(messages);\n          setCurrentAccount(() => accounts[0]);\n          setMessage((messages) => [\n            ...messages,\n            {\n              head: \"Account Changed\",\n              body: `addres: ${accounts[0]}`,\n              variant: \"warning\",\n            },\n          ]);\n        }\n      }\n    );\n\n    window.ethereum.on(\"chainChanged\", (_chainId) => {\n      console.log(_chainId);\n      setCurrentChainID(() => parseInt(_chainId, 16));\n      //window.location.reload()\n    });\n  }, []);\n\n  const SignOut = async () => {\n    setIsLogged(false);\n    setCurrentAccount(\"\");\n  };\n\n  const shortAddr = () => {\n    return `${currentAccount.substr(0, 4)}...${currentAccount.substring(\n      currentAccount.length - 4,\n      currentAccount.length\n    )}`;\n  };\n\n  const [messages, setMessage] = useState([]);\n\n  const Message = (props) => {\n    const [show, setShow] = useState(true);\n\n    const close = () => {\n      setShow(false);\n      setMessage(messages.filter((item, index) => index !== props.id));\n    };\n\n    if (show) {\n      return (\n        <Alert\n          variant={props.variant ? props.variant : \"dark\"}\n          onClose={close}\n          dismissible\n        >\n          <Alert.Heading>{props.head}</Alert.Heading>\n          <p>{props.body}</p>\n        </Alert>\n      );\n    } else {\n      return <></>;\n    }\n  };\n\n  function onLinkClick(navpage) {\n    console.log(navpage);\n    setPage(navpage);\n  }\n\n  if (typeof mytoken === \"undefined\") {\n    return \"Loading...\";\n  }\n\n  return (\n    <>\n      <Navbar bg=\"dark\" className=\"justify-content-between\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">\n          <img\n            alt=\"\"\n            src={logo}\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top App-logo\"\n          />{\" \"}\n          <button\n            bg=\"dark\"\n            className=\"btn btn-dark\"\n            onClick={() => onLinkClick(\"about\")}\n            variant=\"dark\"\n          >\n            About\n          </button>\n          <button\n            bg=\"dark\"\n            className=\"btn btn-dark\"\n            onClick={() => onLinkClick(\"nft\")}\n            variant=\"dark\"\n          >\n            NFT\n          </button>\n          <button\n            bg=\"dark\"\n            className=\"btn btn-dark\"\n            onClick={() => onLinkClick(\"nfttest\")}\n            variant=\"dark\"\n          >\n            Artist\n          </button>\n          <button\n            bg=\"dark\"\n            className=\"btn btn-dark\"\n            onClick={() => onLinkClick(\"artist\")}\n            variant=\"dark\"\n          >\n            Contact us\n          </button>\n        </Navbar.Brand>\n        <div>\n          <Chain chainId={currentChainID} />{\" \"}\n          <Button\n            className={isLogged ? \"connect-button btn-primary\" : \"btn-success\"}\n            onClick={isLogged ? SignOut : SignIn}\n            variant=\"primary\"\n          >\n            {isLogged ? shortAddr() : \"Connect\"}\n          </Button>{\" \"}\n        </div>\n      </Navbar>\n\n      <div className=\"message-list\">\n        {messages.map((item, i) => (\n          <Message\n            head={item.head}\n            body={item.body}\n            variant={item.variant}\n            id={i}\n            key={i}\n          />\n        ))}\n      </div>\n\n      <Container>\n        <Row>\n          <Col>\n            {page === \"about\" ? <About /> : null}\n            {page === \"contactus\" ? <ContactUs /> : null}\n            {page === \"nft\" ? (\n              <NFTPage\n                signerAddress={signerAddress}\n                mytoken={mytoken}\n                currentAccount={currentAccount}\n              />\n            ) : null}\n            {page === \"artist\" ? (\n              <artist\n                signerAddress={signerAddress}\n                mytoken={mytoken}\n                currentAccount={currentAccount}\n              />\n            ) : null}\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}