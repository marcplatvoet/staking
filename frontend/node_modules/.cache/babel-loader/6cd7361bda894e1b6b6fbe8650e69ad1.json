{"ast":null,"code":"var _jsxFileName = \"/home/marc/EatTheBlocks/nft-royalties/frontend/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { React, useEffect, useState } from \"react\";\nimport { Navbar, Container, Row, Col, Button, Alert } from \"react-bootstrap\";\nimport Chain from \"./components/chain\";\nimport About from \"./pages/about\";\nimport Mint from \"./pages/mint\";\nimport Artist from \"./pages/artist\";\nimport TransferTokens from \"./pages/transfertokens\";\nimport { getTokenBlockchain, getBalance, ConnectWallet } from \"./components/token\";\nimport Header from \"./header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [isLogged, setIsLogged] = useState(false);\n  const [currentChainID, setCurrentChainID] = useState(-1);\n  const [page, setPage] = useState(\"\");\n  const [mytoken, setMyToken] = useState(undefined);\n  const [signerAddress, setSignerAddress] = useState(undefined);\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const {\n          signerAddress,\n          mytoken\n        } = await getTokenBlockchain();\n        setMyToken(mytoken);\n        setSignerAddress(signerAddress);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    init();\n  }, []);\n\n  const SignIn = async () => {\n    //Detect Provider\n    const provider = await detectEthereumProvider(); //const web3 = new Web3(provider)\n\n    if (!provider) {\n      setMessage(messages => [...messages, {\n        head: \"Wallet not found\",\n        body: `Please install MetaMask!`,\n        variant: \"warning\"\n      }]);\n    } else {\n      const {\n        islogged,\n        message,\n        currentaccount,\n        currentchainid\n      } = await ConnectWallet();\n      if (currentaccount) setMessage(messages => [...messages, {\n        head: \"User Login\",\n        body: `addres: ${currentaccount}`,\n        variant: \"success\"\n      }]);\n    }\n  };\n\n  useEffect(() => {\n    window.onbeforeunload = function () {\n      return \"Prevent reload\";\n    };\n\n    window.ethereum.on(\"accountsChanged\", function (accounts, currentAccount, messages) {\n      if (accounts.length === 0) {\n        // MetaMask is locked or the user has not connected any accounts\n        setMessage(messages => [...messages, {\n          head: \"User Rejected Request\",\n          body: \"Please connect to MetaMask.\",\n          variant: \"info\"\n        }]);\n      } else if (accounts[0] !== currentAccount) {\n        console.log(accounts[0]);\n        console.log(messages);\n        setCurrentAccount(() => accounts[0]);\n        setMessage(messages => [...messages, {\n          head: \"Account Changed\",\n          body: `addres: ${accounts[0]}`,\n          variant: \"warning\"\n        }]);\n      }\n    });\n    window.ethereum.on(\"chainChanged\", _chainId => {\n      console.log(_chainId);\n      setCurrentChainID(() => parseInt(_chainId, 16)); //window.location.reload()\n    });\n  }, []);\n\n  const SignOut = async () => {\n    setIsLogged(false);\n    setCurrentAccount(\"\");\n  };\n\n  const shortAddr = () => {\n    return `${currentAccount.substr(0, 4)}...${currentAccount.substring(currentAccount.length - 4, currentAccount.length)}`;\n  };\n\n  const [messages, setMessage] = useState([]);\n\n  const addMessage = item => {\n    setMessage(item);\n  };\n\n  const Message = props => {\n    _s();\n\n    const [show, setShow] = useState(true);\n\n    const close = () => {\n      setShow(false);\n      setMessage(messages.filter((item, index) => index !== props.id));\n    };\n\n    if (show) {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        variant: props.variant ? props.variant : \"dark\",\n        onClose: close,\n        dismissible: true,\n        children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: props.head\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n\n  _s(Message, \"vfh/DqFDMxhJHyczn42K3OB7AlU=\");\n\n  function onLinkClick(navpage) {\n    console.log(navpage);\n    setPage(navpage);\n  }\n\n  if (typeof mytoken === \"undefined\") {\n    return \"Loading...\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onLinkClick: onLinkClick,\n      currentChainID: currentChainID,\n      isLogged: isLogged,\n      currentAccount: currentAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      children: messages.map((item, i) => /*#__PURE__*/_jsxDEV(Message, {\n        head: item.head,\n        body: item.body,\n        variant: item.variant,\n        id: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [page === \"about\" ? /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 33\n          }, this) : null, page === \"mint\" ? /*#__PURE__*/_jsxDEV(Mint, {\n            signerAddress: signerAddress,\n            mytoken: mytoken,\n            currentAccount: currentAccount,\n            addMessage: addMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this) : null, page === \"transfertokens\" ? /*#__PURE__*/_jsxDEV(TransferTokens, {\n            signerAddress: signerAddress,\n            mytoken: mytoken,\n            currentAccount: currentAccount,\n            addMessage: addMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this) : null, page === \"artist\" ? /*#__PURE__*/_jsxDEV(Artist, {\n            signerAddress: signerAddress,\n            mytoken: mytoken,\n            currentAccount: currentAccount,\n            addMessage: addMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(App, \"qseAOTyV4o6TuuxMaKLyk4h7RNo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/marc/EatTheBlocks/nft-royalties/frontend/src/App.js"],"names":["detectEthereumProvider","React","useEffect","useState","Navbar","Container","Row","Col","Button","Alert","Chain","About","Mint","Artist","TransferTokens","getTokenBlockchain","getBalance","ConnectWallet","Header","App","currentAccount","setCurrentAccount","isLogged","setIsLogged","currentChainID","setCurrentChainID","page","setPage","mytoken","setMyToken","undefined","signerAddress","setSignerAddress","init","e","console","log","SignIn","provider","setMessage","messages","head","body","variant","islogged","message","currentaccount","currentchainid","window","onbeforeunload","ethereum","on","accounts","length","_chainId","parseInt","SignOut","shortAddr","substr","substring","addMessage","item","Message","props","show","setShow","close","filter","index","id","onLinkClick","navpage","map","i"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { React, useEffect, useState } from \"react\";\nimport { Navbar, Container, Row, Col, Button, Alert } from \"react-bootstrap\";\nimport Chain from \"./components/chain\";\nimport About from \"./pages/about\";\nimport Mint from \"./pages/mint\";\nimport Artist from \"./pages/artist\";\nimport TransferTokens from \"./pages/transfertokens\";\nimport {\n  getTokenBlockchain,\n  getBalance,\n  ConnectWallet,\n} from \"./components/token\";\nimport Header from \"./header\";\n\nfunction App() {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [isLogged, setIsLogged] = useState(false);\n  const [currentChainID, setCurrentChainID] = useState(-1);\n  const [page, setPage] = useState(\"\");\n  const [mytoken, setMyToken] = useState(undefined);\n  const [signerAddress, setSignerAddress] = useState(undefined);\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const { signerAddress, mytoken } = await getTokenBlockchain();\n        setMyToken(mytoken);\n        setSignerAddress(signerAddress);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    init();\n  }, []);\n\n  const SignIn = async () => {\n    //Detect Provider\n    const provider = await detectEthereumProvider();\n    //const web3 = new Web3(provider)\n\n    if (!provider) {\n      setMessage((messages) => [\n        ...messages,\n        {\n          head: \"Wallet not found\",\n          body: `Please install MetaMask!`,\n          variant: \"warning\",\n        },\n      ]);\n    } else {\n      const { islogged, message, currentaccount, currentchainid } =\n        await ConnectWallet();\n      if (currentaccount)\n        setMessage((messages) => [\n          ...messages,\n          {\n            head: \"User Login\",\n            body: `addres: ${currentaccount}`,\n            variant: \"success\",\n          },\n        ]);\n    }\n  };\n\n  useEffect(() => {\n    window.onbeforeunload = function () {\n      return \"Prevent reload\";\n    };\n    window.ethereum.on(\n      \"accountsChanged\",\n      function (accounts, currentAccount, messages) {\n        if (accounts.length === 0) {\n          // MetaMask is locked or the user has not connected any accounts\n          setMessage((messages) => [\n            ...messages,\n            {\n              head: \"User Rejected Request\",\n              body: \"Please connect to MetaMask.\",\n              variant: \"info\",\n            },\n          ]);\n        } else if (accounts[0] !== currentAccount) {\n          console.log(accounts[0]);\n          console.log(messages);\n          setCurrentAccount(() => accounts[0]);\n          setMessage((messages) => [\n            ...messages,\n            {\n              head: \"Account Changed\",\n              body: `addres: ${accounts[0]}`,\n              variant: \"warning\",\n            },\n          ]);\n        }\n      }\n    );\n\n    window.ethereum.on(\"chainChanged\", (_chainId) => {\n      console.log(_chainId);\n      setCurrentChainID(() => parseInt(_chainId, 16));\n      //window.location.reload()\n    });\n  }, []);\n\n  const SignOut = async () => {\n    setIsLogged(false);\n    setCurrentAccount(\"\");\n  };\n\n  const shortAddr = () => {\n    return `${currentAccount.substr(0, 4)}...${currentAccount.substring(\n      currentAccount.length - 4,\n      currentAccount.length\n    )}`;\n  };\n\n  const [messages, setMessage] = useState([]);\n\n  const addMessage = (item) => {\n    setMessage(item);\n  };\n\n  const Message = (props) => {\n    const [show, setShow] = useState(true);\n\n    const close = () => {\n      setShow(false);\n      setMessage(messages.filter((item, index) => index !== props.id));\n    };\n\n    if (show) {\n      return (\n        <Alert\n          variant={props.variant ? props.variant : \"dark\"}\n          onClose={close}\n          dismissible\n        >\n          <Alert.Heading>{props.head}</Alert.Heading>\n          <p>{props.body}</p>\n        </Alert>\n      );\n    } else {\n      return <></>;\n    }\n  };\n\n  function onLinkClick(navpage) {\n    console.log(navpage);\n    setPage(navpage);\n  }\n\n  if (typeof mytoken === \"undefined\") {\n    return \"Loading...\";\n  }\n\n  return (\n    <>\n      <Header\n        onLinkClick={onLinkClick}\n        currentChainID={currentChainID}\n        isLogged={isLogged}\n        currentAccount={currentAccount}\n      />\n\n      <div className=\"message-list\">\n        {messages.map((item, i) => (\n          <Message\n            head={item.head}\n            body={item.body}\n            variant={item.variant}\n            id={i}\n            key={i}\n          />\n        ))}\n      </div>\n\n      <Container>\n        <Row>\n          <Col>\n            {page === \"about\" ? <About /> : null}\n            {page === \"mint\" ? (\n              <Mint\n                signerAddress={signerAddress}\n                mytoken={mytoken}\n                currentAccount={currentAccount}\n                addMessage={addMessage}\n              />\n            ) : null}\n            {page === \"transfertokens\" ? (\n              <TransferTokens\n                signerAddress={signerAddress}\n                mytoken={mytoken}\n                currentAccount={currentAccount}\n                addMessage={addMessage}\n              />\n            ) : null}\n            {page === \"artist\" ? (\n              <Artist\n                signerAddress={signerAddress}\n                mytoken={mytoken}\n                currentAccount={currentAccount}\n                addMessage={addMessage}\n              />\n            ) : null}\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}