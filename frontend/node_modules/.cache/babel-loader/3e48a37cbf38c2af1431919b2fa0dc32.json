{"ast":null,"code":"import detectEthereumProvider from '@metamask/detect-provider';\n\nconst SignIn = async () => {\n  //Detect Provider\n  const provider = await detectEthereumProvider(); //const web3 = new Web3(provider)\n\n  if (!provider) {\n    setMessage(messages => [...messages, {\n      head: \"Wallet not found\",\n      body: `Please install MetaMask!`,\n      variant: 'warning'\n    }]);\n  } else {\n    const address = await ConnectWallet();\n    if (address) setMessage(messages => [...messages, {\n      head: \"User Login\",\n      body: `addres: ${address}`,\n      variant: 'success'\n    }]);\n  }\n};\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/marc/eattheblocks-master/screencast/379-nft-royalties/connectButton/src/components/signin.js"],"names":["detectEthereumProvider","SignIn","provider","setMessage","messages","head","body","variant","address","ConnectWallet"],"mappings":"AAAA,OAAOA,sBAAP,MAAmC,2BAAnC;;AAGA,MAAMC,MAAM,GAAG,YAAY;AACvB;AACA,QAAMC,QAAQ,GAAG,MAAMF,sBAAsB,EAA7C,CAFuB,CAGvB;;AAEA,MAAG,CAACE,QAAJ,EAAc;AAEZC,IAAAA,UAAU,CAACC,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAc;AAACC,MAAAA,IAAI,EAAG,kBAAR;AAA4BC,MAAAA,IAAI,EAAG,0BAAnC;AAA8DC,MAAAA,OAAO,EAAE;AAAvE,KAAd,CAAb,CAAV;AAED,GAJD,MAIO;AAEL,UAAMC,OAAO,GAAG,MAAMC,aAAa,EAAnC;AACA,QAAID,OAAJ,EACEL,UAAU,CAACC,QAAQ,IAAG,CAAC,GAAGA,QAAJ,EAAc;AAACC,MAAAA,IAAI,EAAG,YAAR;AAAsBC,MAAAA,IAAI,EAAG,WAAUE,OAAQ,EAA/C;AAAkDD,MAAAA,OAAO,EAAE;AAA3D,KAAd,CAAZ,CAAV;AAEH;AAEJ,CAjBD;;KAAMN,M;AAkBN,eAAeA,MAAf","sourcesContent":["import detectEthereumProvider from '@metamask/detect-provider';\n\n\nconst SignIn = async () => {\n    //Detect Provider\n    const provider = await detectEthereumProvider()\n    //const web3 = new Web3(provider)\n\n    if(!provider) {\n\n      setMessage(messages => [...messages, {head : \"Wallet not found\", body: `Please install MetaMask!`, variant: 'warning'}])\n\n    } else {\n\n      const address = await ConnectWallet()\n      if (address)\n        setMessage(messages =>[...messages, {head : \"User Login\", body: `addres: ${address}`, variant: 'success'}])\n\n    }\n    \n}\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}