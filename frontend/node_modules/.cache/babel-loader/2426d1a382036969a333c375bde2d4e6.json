{"ast":null,"code":"var _jsxFileName = \"/home/marc/eattheblocks-master/screencast/379-nft-royalties/connectButton/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from 'web3';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { useEffect, useState } from 'react';\nimport { Navbar, Container, Row, Col, Button, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [isLogged, setIsLogged] = useState(false);\n\n  const SignIn = async () => {\n    setIsLogged(true);\n  };\n\n  const SignOut = async () => {\n    setIsLogged(false);\n  };\n\n  const [messages, setMessage] = useState([{\n    head: \"User Rejected Request\",\n    body: 'Please connect to MetaMask.',\n    variant: 'info'\n  }, {\n    head: \"User Rejected Request\",\n    body: 'Please connect to MetaMask.',\n    variant: 'info'\n  }]);\n\n  const Message = props => {\n    _s();\n\n    const [show, setShow] = useState(true);\n\n    const close = () => {\n      setShow(false);\n      setMessage(messages.filter((item, index) => index !== props.id));\n    };\n\n    if (show) {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        variant: props.variant ? props.variant : 'dark',\n        onClose: close,\n        dismissible: true,\n        children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: props.head\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n\n  _s(Message, \"vfh/DqFDMxhJHyczn42K3OB7AlU=\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"dark\",\n      className: \"justify-content-between\",\n      variant: \"dark\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        href: \"#home\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: logo,\n          width: \"30\",\n          height: \"30\",\n          className: \"d-inline-block align-top App-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this), ' ', \"0x React Bootstrap Tutorial\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: SignIn,\n          variant: \"primary\",\n          children: \"Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          onClick: SignOut,\n          style: {\n            visibility: isLogged ? \"visible\" : \"hidden\"\n          },\n          variant: \"danger\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      children: messages.map((item, i) => /*#__PURE__*/_jsxDEV(Message, {\n        head: item.head,\n        body: item.body,\n        variant: item.variant,\n        id: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            className: \"App-logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(App, \"O/1zas1Ltp80BK1p03eBLKhQWaM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/marc/eattheblocks-master/screencast/379-nft-royalties/connectButton/src/App.js"],"names":["Web3","detectEthereumProvider","useEffect","useState","Navbar","Container","Row","Col","Button","Alert","App","isLogged","setIsLogged","SignIn","SignOut","messages","setMessage","head","body","variant","Message","props","show","setShow","close","filter","item","index","id","logo","visibility","map","i"],"mappings":"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","sourcesContent":["import logo from './logo.svg'\nimport './App.css'\nimport Web3 from 'web3'\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { useEffect, useState } from 'react'\nimport { Navbar ,Container,Row,Col,Button,Alert } from 'react-bootstrap'\n\nfunction App() {\n\n  const [isLogged, setIsLogged] = useState(false)\n\n  const SignIn = async () => {\n    setIsLogged(true)\n  }\n\n  const SignOut = async () => {\n    setIsLogged(false)\n  }\n\n\n  \n  const [messages, setMessage] = useState([\n    {head : \"User Rejected Request\", body: 'Please connect to MetaMask.', variant: 'info'},\n    {head : \"User Rejected Request\", body: 'Please connect to MetaMask.', variant: 'info'}\n  ])\n\n\n  const Message = (props) => {\n\n    const [show, setShow] = useState(true);\n\n    const close = () => {\n      setShow(false)\n      setMessage(messages.filter((item, index) => index !== props.id))\n    }\n\n    if(show) {\n      return (\n        <Alert variant={props.variant ? props.variant : 'dark'} onClose={close} dismissible>\n          <Alert.Heading>{props.head}</Alert.Heading>\n          <p>\n            {props.body}\n          </p>\n        </Alert>\n      )\n    } else {\n      return(<></>)\n    }\n\n    \n  }\n  \n  return (\n  <>\n  <Navbar bg=\"dark\" className=\"justify-content-between\" variant=\"dark\">\n    <Navbar.Brand href=\"#home\">\n      <img\n        alt=\"\"\n        src={logo}\n        width=\"30\"\n        height=\"30\"\n        className=\"d-inline-block align-top App-logo\"\n      />{' '}\n      0x React Bootstrap Tutorial\n      \n    </Navbar.Brand>\n    <div>\n      <Button onClick={SignIn} variant=\"primary\">Connect</Button>{' '}\n      <Button onClick={SignOut} style={{visibility: isLogged ? \"visible\" : \"hidden\"}} variant=\"danger\">X</Button>\n    </div>\n  </Navbar>\n\n    <div className=\"message-list\" >\n        {\n          messages.map((item,i) => (\n            <Message head={item.head} body={item.body} variant={item.variant} id={i} key={i} />\n          ))\n        }\n    </div>\n\n    <Container>\n      <Row>\n        <Col>\n        \n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n        \n        </Col>\n      </Row>\n    </Container>\n  </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}